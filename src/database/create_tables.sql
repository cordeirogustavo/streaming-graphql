-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.channels
(
    id_channel serial NOT NULL,
    slug character varying(50) NOT NULL,
    name character varying(50) NOT NULL,
    description character varying(200),
    created_at timestamp without time zone DEFAULT 'now()',
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT "PK_channels" PRIMARY KEY (id_channel)
);

CREATE TABLE IF NOT EXISTS public.playlists
(
    id_playlist serial NOT NULL,
    name character varying(100) NOT NULL,
    description character varying(200),
    created_at timestamp without time zone DEFAULT 'now()',
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    id_channel serial,
    CONSTRAINT "PK_playlists" PRIMARY KEY (id_playlist)
);

CREATE TABLE IF NOT EXISTS public.videos
(
    id_video serial NOT NULL,
    title character varying(100) NOT NULL,
    description character varying(200),
    url character varying(300),
    id_channel serial NOT NULL,
    created_at timestamp without time zone DEFAULT 'now()',
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    PRIMARY KEY (id_video)
);

CREATE TABLE IF NOT EXISTS public."playlistVideos"
(
    id_video serial NOT NULL,
    id_playlist serial NOT NULL,
    PRIMARY KEY (id_video, id_playlist)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id_user serial NOT NULL,
    name character varying(200) NOT NULL,
    email character varying(120) NOT NULL,
    created_at timestamp without time zone DEFAULT 'now()',
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    PRIMARY KEY (id_user)
);

CREATE TABLE IF NOT EXISTS public.subscribed
(
    id_user serial NOT NULL,
    id_channel serial NOT NULL,
    subscribed_at timestamp without time zone DEFAULT 'now()',
    PRIMARY KEY (id_user, id_channel)
);

ALTER TABLE IF EXISTS public.playlists
    ADD FOREIGN KEY (id_channel)
    REFERENCES public.channels (id_channel) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.videos
    ADD FOREIGN KEY (id_channel)
    REFERENCES public.channels (id_channel) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."playlistVideos"
    ADD FOREIGN KEY (id_video)
    REFERENCES public.videos (id_video) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."playlistVideos"
    ADD FOREIGN KEY (id_playlist)
    REFERENCES public.playlists (id_playlist) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.subscribed
    ADD FOREIGN KEY (id_user)
    REFERENCES public.users (id_user) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.subscribed
    ADD FOREIGN KEY (id_channel)
    REFERENCES public.channels (id_channel) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;